                                    CSS

comments : /* */

for multi line comment :  ctrl /

We can add css by three ways:

1. inline
2.internal
3.external

-> considers the last input 

Shortcuts: 
--------------

-> for creating a class : div.classname
                          li.classname*5 - > gives u 5 li elements with same class name


-> for selecting multiple elements: alt +click

Css Basic Syntax: 
----------------

selector {

property1:value1;
property2:value2;
}

-> selectors can be elemnts ,id, class

Types of selectors: 
----------------
   1. element :   
         p {
           background:red;
           }

-> but this selects all the paragrah elemnets in th page
-> in order to select only one specfic element we use id


    2. id: 

-> id should be selected by using #
    
    #idname{
        propertyname :value;
      }



  
 eg:     <style>
          #mypara{
              background:blue;
            }
          </style>

         <body>
           <p id = "mypara"> these is para </p>
         </body>

  3. Class:

-> class is selected by using 
           .myclass{
               
                  }

eg:          <style>
          myclass{
              background:blue;
            }
          </style>

         <body>
           <p class = "myclass"> these is para </p>
         </body>

   4. universal selector: 
      *{
        background-color:blue;
        }
-> universal selector selects the entire page

we can group multiple elements or classes or id by

    h1,p,h2{
           text-align:center;
          }


-------------------------------------------------------------------------------
                                 CSS colors:

->  <h1 style="border:2px solid Tomato;">Hello World</h1>


1. rgb -> red, green,blue -> 0-255 range
2. rgba - >  alpha - > opacity : 0.0=fully transaparent 1.0 = not transperent
3. HEX value --> #fffff --> #rrggbb 
4. HSL  --> hue, saturation, lightness

------------------------------------------------------------------
                           CSS Backgrounds: 


background color: 
-----------------

-> background-color : green;
     makes the background color blue;

->    background-color: green;
       opacity: 0.3;

->   background: rgba(0, 128, 0, 0.3)


Background images:
------------------

-> background-image: url ("image.png");

-> background-repeat:norepeat;

-> we can also repeat for x and y directions alone by repeat-y or repeat-x;

-> background-position: right-top;

-> it moves the background image to right top corner

->  background-attachment:fixed;

-> The background-attachment property specifies whether the
    background image should scroll or be fixed 

                             
- ----------------------------------------------------------------------------

                                CSS Borders:

boder-style: solid;
-------------------

Border-width :
--------------

-> border width can be set as a specfic size in cm,px,pt,em)
   or by thin, medium , thick.

p.one {
  border-style: solid;
  border-width: 5px 20px; /* 5px top and bottom, 20px on the sides */
}

p.two {
  border-style: solid;
  border-width: 20px 5px; /* 20px top and bottom, 5px on the sides */
}

p.three {
  border-style: solid;
  border-width: 25px 10px 4px 35px; /* 25px top, 10px right, 4px bottom and 35px left */
}

Border color: 
--------------
      border-color: black;

-> we can also set border for one side i.e 

      p {
  border-left: 6px solid red;
  background-color: lightgrey;
        }
-> here entire para will be light grey and left side will be red

another ex: 
   p {
  border-bottom: 6px solid red;
  background-color: lightgrey;
     }

---------------------------------------------------------------------------
                           CSS Margins:
  
-> margins are used to create space around elements:

-> margins are out side the specified bordres

 p {
  margin-top: 100px;
  margin-bottom: 100px;
  margin-right: 150px;
  margin-left: 80px;
}

 or by using shorthand: 

  p {
  margin: 25px 50px 75px 100px;
    }

** margin:auto;

-> auto sets the element into center.

**
-> we can also inherit properties from another by


<style>
div {
  border: 1px solid red;
  margin-left: 100pxeft;
}

p.ex1 {
  margin-left: inherit;
}
</style>
</head>
<body>

<h2>Use of the inherit value</h2>
<p>Let the left margin be inherited from the parent element:</p>

<div>
<p class="ex1">This paragraph has an inherited left margin (from the div element).</p>
</div>



____------------------------------------------------------------------

                                 CSS PAdding:
 

-> The CSS padding properties are used to generate space around an 
   element's content, inside of any defined borders.

   top-> right-> bottom -> left

div {
  padding-top: 50px;
  padding-right: 30px;
  padding-bottom: 50px;
  padding-left: 80px;
}

******
-> we can also set the div width by using width property instead of taking entire line

Eg:

div.ex1 {
  width: 300px;
  background-color: yellow;
}

div.ex2 {
  width: 300px;
  padding: 25px;
  background-color: lightblue;
}
</style>
</head>
<body>

<h2>Padding and element width</h2>

<div class="ex1">This div is 300px wide.</div>
<br>

<div class="ex2">The width of this div is 350px, even though it is defined as 300px in the CSS.</div>

</body>

--------------------------------------------------------------------------
                           Height/width

-> with this we can set height and width of any element

div {
  height: 100px;
  width: 500px;
  background-color: powderblue;
}

-> we can use max-width:500px -> even though the browser size increases it doesnt
   increase.

**BoxModel : is to create a box like structure around element
div {
  width: 300px;
  border: 15px solid green;
  padding: 50px;
  margin: 20px;
}

-----------------------------------------------------------------------------

                          CSS Outline:
                          ------------

-> outline is a line that is drawn around the elements:

      outline: green solid 10px;


----------------------------------------------------------------------------------
                            CSS Text:
                         ------------------

-> we can change the color of text also 

Eg:
  h1 {
  background-color: black;
  color: white;
}

-> we can allign text to right or left according to need using
   
     text-align: center;

-> text-decoration property is used to add decoration to text;

h1 {
  text-decoration: overline;
}

h2 {
  text-decoration: line-through;
}

h3 {
  text-decoration: underline;
}

-> text-indent : 50px  -> is used to add some space before starting the paragraph

------------------------------------------------------------------------
                          CSS Links:
                      ----------------

css links can be styled differnetly depending on the state they are in:


a:link - a normal, unvisited link
a:visited - a link the user has visited
a:hover - a link when the user mouses over it
a:active - a link the moment it is clicked


-> order of the code:


a:hover MUST come after a:link and a:visited
a:active MUST come after a:hover


 Link buttons:

-> to create the links as buttons we use :

a:link, a:visited {
  background-color: #f44336;
  color: white;
  padding: 14px 25px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
}

a:hover, a:active {
  background-color: red;
}

-> here dispaly:inlineblock is for making the link as block

-----------------------------------------------------------------------
                         tables :

#table{
font-family: Arial, Helvetica, sans-serif;
border-collapse: 0px;
width: 100%;
}

#table th{
    background-color: darkgreen;
    text-align: center;
    padding-top: 2px;
    padding-bottom: 2px;
    color:black
}

#table td, #table th{
border:1px silver;
}

#table tr:nth-child(even)
{
    background-color: snow;
}
#table tr:hover
{
background-color: tan;
}


html code:


<table id="table">
<tr>
    <th>Firstname</th>
    <th>Lastname</th>
    <th>mobile no</th>
</tr>
<tr>
    <td>rahul </td>
    <td>reddy </td>
    <td>939277880</td>
</tr>
<tr>
    <td>rahul </td>
    <td>reddy </td>
    <td>939277880</td>
</tr>
<tr>
    <td>rahul </td>
    <td>reddy </td>
    <td>939277880</td>
</tr>
<tr>
    <td>rahul </td>
    <td>reddy </td>
    <td>939277880</td>
</tr>



</table>


__________________________________________________________________________________

                           CSS Display   
                  --------------------------------


Block level elements:

-> block level elements always start on new line and take sthe entire lenght

eg:  <div>
<h1> - <h6>
<p>
<form>
<header>
<footer>
<section>

-> Inline Elements: 

An inline element does not start on a new line and only takes up as much
  width as necessary.

This is an inline <span> element inside a paragraph.

Examples of inline elements:

<span>
<a>
<img>


-> As mentioned, every element has a default display value. However, 
you can override this.

Changing an inline element to a block element, or vice versa, can be useful 
for making the page look a specific way, and still follow the web standards.

li {
  display: inline;
}

**
-> visibility:hidden ;  ---> makes it invisinble

------------------------------------------------------------------------------

                         Css Max-width:

-> box level elemets streatches as far as possible 

-> with the help of width property we can stop it as required
   eg:

       width :33cm;
         <div>
          <h1> hello world</h1>
          </div>

-> but the problem is it is not responsive 

-> we can solve it by using max-width :size; and margin: auto;


----------------------------------------------------------------------------------

                             CSS Position:

-> the position property specifies the type of positionining method an element
   should take 
 they are:
  
1.static
2.relative
3.fixed
4.absolute
5.sticky


Static: all html elements are positioned static by refault

relative:


________________________________________________________________________________

                             propertys: 

1.background -image :url('../img/bg.jpg');

-> here image is saved in image folder
-> and .. is for going back two steps

2.background-repeat:norepeat;

-> we can also repeat for x and y directions alone by repeat-y or repeat-x;

3. background-position: right-top;

-> it moves the background image to right top corner

4. background-attachment:fixed;

-> fixes the background image 

5. text-align: center -> makes the text to in center


